name: Lint
on: [pull_request]

jobs:
  lint-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          [
            "coinbase-agentkit",
            "framework-extensions/langchain",
            "create-onchain-agent",
            "examples/langchain-cdp-chatbot",
            "examples/langchain-eth-account-chatbot",
            "examples/langchain-smart-wallet-chatbot",
            "examples/langchain-twitter-chatbot",
          ]
    defaults:
      run:
        working-directory: python/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: python/${{ matrix.package }}/.venv
          key: venv-${{ matrix.package }}-${{ runner.os }}-${{ hashFiles(format('python/{0}/poetry.lock', matrix.package)) }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev

      - name: Ensure linting
        run: poetry run make lint

  lint-typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: ./typescript
      - name: Ensure Linting
        working-directory: ./typescript
        run: |
          npm ci
          npm run lint

  check-package-lock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: ./typescript

      - name: Check if package-lock.json changed
        working-directory: ./typescript
        run: |
          npm install
          if [ -n "$(git diff package-lock.json)" ]; then
            echo "Error: package-lock.json was modified after running npm install. Please commit the updated package-lock.json file."
            git diff package-lock.json
            exit 1
          fi

  check-poetry-locks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Check poetry.lock files
        run: |
          for dir in $(find . -name pyproject.toml -exec dirname {} \;); do
            echo "Checking $dir..."
            cd $dir
            poetry install
            if [ -n "$(git diff poetry.lock)" ]; then
              echo "Error: poetry.lock in $dir was modified after running poetry install. Please commit the updated poetry.lock file."
              git diff poetry.lock
              exit 1
            fi
            cd - > /dev/null
          done
