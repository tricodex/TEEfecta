[tool.poetry]
name = "coinbase-agentkit"
version = "0.2.0"
description = "Coinbase AgentKit"
authors = ["John Peterson <john.peterson@coinbase.com>"]
readme = "README.md"
license = "Apache-2.0"
keywords = ["coinbase", "sdk", "crypto", "cdp", "agentkit", "ai", "agent"]
packages = [
    { include = "coinbase_agentkit" },
]

[tool.poetry.dependencies]
python = "^3.10"
cdp-sdk = "0.21.0"
pydantic = "^2.0"
web3 = "^7.6.0"
python-dotenv = "^1.0.1"
requests = "^2.31.0"
allora-sdk = "^0.2.0"
paramiko = "^3.5.1"

[tool.poetry.scripts]
check-description-length = "scripts.check_description_length:main"
generate-action-provider = "scripts.generate_action_provider.main:main"

[tool.poetry.group.dev.dependencies]
ruff = "^0.7.1"
mypy = "^1.13.0"
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
sphinx = "^8.0.2"
sphinx-autobuild = "^2024.9.19"
sphinxcontrib-napoleon = "^0.7"
sphinx-autodoc-typehints = "^2.4.4"
myst-parser = "^4.0.0"
ruff-lsp = "^0.0.58"
python-lsp-server = "^1.12.0"
tweepy = "^4.15.0"
towncrier = "^24.8.0"
jinja2 = "^3.1.3"
typer = "^0.9.0"
prompt-toolkit = "^3.0.50"
questionary = "^2.1.0"
rich = "^13.7.1"
pillow = "^11.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = ["./build/**", "./dist/**", "./docs/**"]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "D", "UP", "B", "C4", "SIM", "RUF"]
ignore = ["D213", "D203", "D100", "D104", "D107", "E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["coinbase_agentkit, cdp"]
combine-as-imports = true

[tool.towncrier]
package = "coinbase_agentkit"
filename = "CHANGELOG.md"
directory = "changelog.d/"
title_format = "## [{version}] - {project_date}"
issue_format = "[#{issue}](https://github.com/coinbase/agentkit/pull/{issue})"

[tool.towncrier.fragment.feature]
name = "Added"

[tool.towncrier.fragment.bugfix]
name = "Fixed"

[tool.pytest.ini_options]
addopts = "-m 'not e2e'"
markers = [
    "e2e: marks tests as end-to-end tests that interact with real services",
    "manual: marks tests that should only be run manually (e.g., tests that incur costs)"
]
